{"version":3,"file":"core-8d0Ef0yU.js","sources":["../../core/SemanticCategories.js","../../core/WebGPUEngine.js","../../core/VisualizationEngine.js"],"sourcesContent":["// M√≥dulo de Categorias Sem√¢nticas\n// Sistema inteligente de categoriza√ß√£o de palavras em portugu√™s\n\nexport class SemanticCategories {\n    constructor() {\n        // Sistema de categorias sem√¢nticas expandido e equilibrado\n        this.categories = {\n            realeza: {\n                weight: 2.0, // Reduzido de 3.0 para evitar domin√¢ncia\n                words: ['rei', 'rainha', 'pr√≠ncipe', 'princesa', 'imperador', 'imperatriz', 'monarca', 'coroa', 'trono', 'pal√°cio', 'reino', 'imp√©rio', 'nobre', 'duque', 'duquesa', 'conde', 'condessa', 'bar√£o', 'baronesa'],\n                related: ['poder', 'governo', 'autoridade', 'estado', 'pa√≠s', 'comandar', 'liderar', 'soberano', 'majestade', 'real', 'nobreza']\n            },\n            fam√≠lia: {\n                weight: 2.5,\n                words: ['pai', 'm√£e', 'filho', 'filha', 'irm√£o', 'irm√£', 'av√¥', 'av√≥', 'bisav√¥', 'bisav√≥', 'tio', 'tia', 'primo', 'prima', 'marido', 'esposa', 'namorado', 'namorada', 'noivo', 'noiva', 'fam√≠lia', 'parente', 'cunhado', 'cunhada', 'sogro', 'sogra'],\n                related: ['amor', 'carinho', 'casa', 'lar', 'uni√£o', 'relacionamento', 'casamento', 'parentesco', 'la√ßo', 'v√≠nculo']\n            },\n            pessoas: {\n                weight: 2.0,\n                words: ['homem', 'mulher', 'crian√ßa', 'jovem', 'adulto', 'adulta', 'idoso', 'idosa', 'beb√™', 'menino', 'menina', 'rapaz', 'mo√ßa', 'pessoa', 'gente', 'indiv√≠duo', 'ser', 'humano', 'cidad√£o', 'cidad√£'],\n                related: ['vida', 'sociedade', 'comunidade', 'popula√ß√£o', 'humanidade', 'g√™nero', 'idade']\n            },\n            profiss√µes: {\n                weight: 2.0,\n                words: ['m√©dico', 'm√©dica', 'doutora', 'enfermeiro', 'enfermeira', 'professor', 'professora', 'engenheiro', 'engenheira', 'advogado', 'advogada', 'policial', 'bombeiro', 'bombeira', 'dentista', 'veterin√°rio', 'veterin√°ria', 'cozinheiro', 'cozinheira', 'gar√ßom', 'gar√ßonete', 'motorista', 'piloto', 'soldado', 'artista', 'm√∫sico', 'escritor', 'escritora', 'jornalista', 'arquiteto', 'arquiteta', 'psic√≥logo', 'psic√≥loga', 'farmac√™utico', 'farmac√™utica', 'contador', 'contadora'],\n                related: ['trabalho', 'carreira', 'profiss√£o', 'emprego', 'sal√°rio', 'ocupa√ß√£o', 'of√≠cio', 'especialista']\n            },\n            emo√ß√µes: {\n                weight: 2.5,\n                words: ['amor', 'felicidade', 'tristeza', 'raiva', 'medo', 'alegria', 'saudade', 'esperan√ßa', 'paz', 'paix√£o', '√≥dio', 'inveja', 'ci√∫me', 'carinho', 'amizade', 'bondade', 'compaix√£o', 'gratid√£o', 'ansiedade', 'nervosismo', 'calma', 'serenidade', 'entusiasmo', 'melancolia'],\n                related: ['sentimento', 'cora√ß√£o', 'alma', 'esp√≠rito', 'emocional', 'afeto', 'humor', 'estado']\n            },\n            objetos: {\n                weight: 1.5,\n                words: ['casa', 'carro', 'livro', 'telefone', 'computador', 'mesa', 'cadeira', 'cama', 'sof√°', 'televis√£o', 'roupa', 'sapato', 'rel√≥gio', 'chave', 'dinheiro', 'porta', 'janela', 'espelho', 'l√¢mpada', 'geladeira'],\n                related: ['objeto', 'coisa', 'item', 'material', 'produto', 'utens√≠lio', 'ferramenta', 'equipamento']\n            },\n            natureza: {\n                weight: 2.0,\n                words: ['√°gua', 'fogo', 'terra', 'ar', 'sol', 'lua', 'estrela', 'nuvem', 'chuva', 'vento', '√°rvore', 'flor', 'planta', 'animal', 'cachorro', 'gato', 'p√°ssaro', 'peixe', 'borboleta', 'abelha', 'floresta', 'montanha', 'rio', 'mar', 'oceano'],\n                related: ['natural', 'ambiente', 'mundo', 'planeta', 'universo', 'ecologia', 'vida', 'selvagem']\n            },\n            abstratos: {\n                weight: 1.8,\n                words: ['vida', 'morte', 'tempo', 'espa√ßo', 'conhecimento', 'sabedoria', 'verdade', 'mentira', 'liberdade', 'justi√ßa', 'poder', 'for√ßa', 'energia', 'destino', 'sorte', 'futuro', 'passado', 'presente'],\n                related: ['conceito', 'ideia', 'pensamento', 'filosofia', 'abstrato', 'teoria', 'princ√≠pio']\n            }\n        };\n    }\n\n    /**\n     * Obt√©m o vocabul√°rio completo de todas as categorias\n     * @returns {string[]} Array com todas as palavras\n     */\n    getVocabulary() {\n        const allWords = new Set();\n        \n        Object.values(this.categories).forEach(category => {\n            category.words.forEach(word => allWords.add(word));\n            category.related.forEach(word => allWords.add(word));\n        });\n        \n        return Array.from(allWords);\n    }\n\n    /**\n     * Identifica a categoria de uma palavra\n     * @param {string} word - Palavra para categorizar\n     * @returns {Object} Objeto com nome da categoria e peso\n     */\n    getCategoryForWord(word) {\n        const lowerWord = word.toLowerCase();\n        \n        for (const [categoryName, category] of Object.entries(this.categories)) {\n            if (category.words.includes(lowerWord) || category.related.includes(lowerWord)) {\n                return { name: categoryName, weight: category.weight };\n            }\n        }\n        \n        return { name: 'geral', weight: 1.0 };\n    }\n\n    /**\n     * Calcula similaridade avan√ßada com ranking por categoria\n     * @param {string} word1 - Primeira palavra\n     * @param {string} word2 - Segunda palavra  \n     * @param {number} cosineSimilarity - Similaridade cosseno base\n     * @returns {number} Similaridade ajustada\n     */\n    calculateAdvancedSimilarity(word1, word2, cosineSimilarity) {\n        const category1 = this.getCategoryForWord(word1);\n        const category2 = this.getCategoryForWord(word2);\n        \n        let categoryBonus = 1.0;\n        \n        // Bonus PEQUENO se est√£o na mesma categoria (para n√£o inflar demais)\n        if (category1.name === category2.name && category1.name !== 'geral') {\n            categoryBonus = 1.1; // Apenas 10% de bonus\n        }\n        \n        // REMOVER aplica√ß√£o de pesos que estava inflacionando\n        // Aplicar apenas o bonus de categoria, mantendo a similaridade original\n        const weightedSimilarity = cosineSimilarity * categoryBonus;\n        \n        // Penalizar palavras muito diferentes em tamanho (suavizado)\n        const lengthDifference = Math.abs(word1.length - word2.length);\n        const lengthPenalty = lengthDifference > 8 ? 0.9 : 1.0; // Penalidade muito pequena\n        \n        // MANTER a propor√ß√£o original - N√ÉO limitar a 1.0 se n√£o for necess√°rio\n        return weightedSimilarity * lengthPenalty;\n    }\n\n    /**\n     * Obt√©m cores para categorias (para visualiza√ß√£o)\n     * @returns {Object} Mapeamento categoria ‚Üí cor\n     */\n    getCategoryColors() {\n        return {\n            'realeza': '#f59e0b',\n            'fam√≠lia': '#ef4444',\n            'pessoas': '#10b981',\n            'profiss√µes': '#8b5cf6',\n            'emo√ß√µes': '#f97316',\n            'objetos': '#6b7280',\n            'natureza': '#059669',\n            'abstratos': '#7c3aed',\n            'geral': '#374151'\n        };\n    }\n\n    /**\n     * Estat√≠sticas do vocabul√°rio\n     * @returns {Object} Informa√ß√µes sobre o vocabul√°rio\n     */\n    getStats() {\n        const stats = {\n            totalWords: 0,\n            categories: {}\n        };\n\n        Object.entries(this.categories).forEach(([name, category]) => {\n            const totalWords = category.words.length + category.related.length;\n            stats.categories[name] = {\n                words: category.words.length,\n                related: category.related.length,\n                total: totalWords,\n                weight: category.weight\n            };\n            stats.totalWords += totalWords;\n        });\n\n        return stats;\n    }\n} ","// M√≥dulo WebGPU Engine\n// Sistema de acelera√ß√£o GPU para c√°lculos de similaridade cosseno\n\nexport class WebGPUEngine {\n    constructor() {\n        this.device = null;\n        this.isSupported = false;\n        this.isInitialized = false;\n    }\n\n    /**\n     * Inicializa WebGPU\n     * @returns {Promise<boolean>} Sucesso da inicializa√ß√£o\n     */\n    async initialize() {\n        try {\n            if (!navigator.gpu) {\n                console.log('WebGPU n√£o suportado neste navegador');\n                return false;\n            }\n\n            const adapter = await navigator.gpu.requestAdapter();\n            if (!adapter) {\n                console.log('Adaptador WebGPU n√£o encontrado');\n                return false;\n            }\n\n            this.device = await adapter.requestDevice();\n            this.isSupported = true;\n            this.isInitialized = true;\n            \n            console.log('üöÄ WebGPU Engine inicializado com sucesso!');\n            return true;\n            \n        } catch (error) {\n            console.log('WebGPU n√£o dispon√≠vel:', error);\n            this.isSupported = false;\n            this.isInitialized = false;\n            return false;\n        }\n    }\n\n    /**\n     * Calcula similaridade cosseno usando WebGPU\n     * @param {Float32Array} targetEmbedding - Embedding alvo\n     * @param {Float32Array[]} embeddings - Array de embeddings para comparar\n     * @returns {Promise<number[]>} Array de similaridades\n     */\n    async computeCosineSimilarity(targetEmbedding, embeddings) {\n        if (!this.isSupported || !this.device) {\n            throw new Error('WebGPU n√£o est√° dispon√≠vel');\n        }\n\n        const targetSize = targetEmbedding.length;\n        const numEmbeddings = embeddings.length;\n        const embeddingSize = targetSize;\n\n        // 1. Criar buffers GPU\n        const targetBuffer = this.device.createBuffer({\n            size: targetSize * 4, // 4 bytes por float32\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n        });\n        this.device.queue.writeBuffer(targetBuffer, 0, new Float32Array(targetEmbedding));\n\n        const embeddingsBuffer = this.device.createBuffer({\n            size: numEmbeddings * embeddingSize * 4,\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n        });\n        this.device.queue.writeBuffer(embeddingsBuffer, 0, new Float32Array(embeddings.flat()));\n\n        const outputBuffer = this.device.createBuffer({\n            size: numEmbeddings * 4, // Um float32 para cada similaridade\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,\n        });\n\n        // 2. Criar shader WGSL\n        const shaderModule = this.device.createShaderModule({\n            code: this.createCosineSimilarityShader(numEmbeddings, embeddingSize),\n        });\n\n        // 3. Criar pipeline\n        const bindGroupLayout = this.device.createBindGroupLayout({\n            entries: [\n                { binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: \"read-only-storage\" } },\n                { binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: \"read-only-storage\" } },\n                { binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: \"storage\" } },\n            ],\n        });\n\n        const pipelineLayout = this.device.createPipelineLayout({ \n            bindGroupLayouts: [bindGroupLayout] \n        });\n\n        const computePipeline = await this.device.createComputePipeline({\n            layout: pipelineLayout,\n            compute: {\n                module: shaderModule,\n                entryPoint: \"main\",\n            },\n        });\n\n        // 4. Criar bind group\n        const bindGroup = this.device.createBindGroup({\n            layout: bindGroupLayout,\n            entries: [\n                { binding: 0, resource: { buffer: targetBuffer } },\n                { binding: 1, resource: { buffer: embeddingsBuffer } },\n                { binding: 2, resource: { buffer: outputBuffer } },\n            ],\n        });\n\n        // 5. Executar na GPU\n        const commandEncoder = this.device.createCommandEncoder();\n        const passEncoder = commandEncoder.beginComputePass();\n        passEncoder.setPipeline(computePipeline);\n        passEncoder.setBindGroup(0, bindGroup);\n        \n        const workgroupCount = Math.ceil(numEmbeddings / 64);\n        passEncoder.dispatchWorkgroups(workgroupCount);\n        passEncoder.end();\n\n        // 6. Copiar resultado de volta\n        const gpuReadBuffer = this.device.createBuffer({\n            size: numEmbeddings * 4,\n            usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n        });\n        commandEncoder.copyBufferToBuffer(outputBuffer, 0, gpuReadBuffer, 0, numEmbeddings * 4);\n\n        this.device.queue.submit([commandEncoder.finish()]);\n\n        // 7. Ler resultados\n        await gpuReadBuffer.mapAsync(GPUMapMode.READ);\n        const resultData = new Float32Array(gpuReadBuffer.getMappedRange());\n        const similarities = Array.from(resultData);\n        gpuReadBuffer.unmap();\n\n        // 8. Limpeza\n        this.destroyBuffers([targetBuffer, embeddingsBuffer, outputBuffer, gpuReadBuffer]);\n\n        return similarities;\n    }\n\n    /**\n     * Gera o shader WGSL para c√°lculo de similaridade cosseno\n     * @param {number} numEmbeddings - N√∫mero de embeddings\n     * @param {number} embeddingSize - Tamanho de cada embedding\n     * @returns {string} C√≥digo WGSL\n     */\n    createCosineSimilarityShader(numEmbeddings, embeddingSize) {\n        return `\n            @group(0) @binding(0) var<storage, read> targetEmbedding: array<f32>;\n            @group(0) @binding(1) var<storage, read> embeddings: array<f32>;\n            @group(0) @binding(2) var<storage, read_write> output: array<f32>;\n\n            @workgroup_size(64) // Otimizado para a maioria das GPUs\n            @compute\n            fn main(@builtin(global_invocation_id) global_id: vec3<u32>) {\n                let idx = global_id.x;\n                if (idx >= ${numEmbeddings}u) {\n                    return;\n                }\n\n                let embeddingOffset = idx * ${embeddingSize}u;\n                var dotProduct: f32 = 0.0;\n                var magA_sq: f32 = 0.0;\n                var magB_sq: f32 = 0.0;\n\n                // Calcular produto escalar e magnitudes em paralelo\n                // Loop desenrolado para melhor performance\n                for (var i = 0u; i < ${embeddingSize}u; i = i + 1u) {\n                    let valA = targetEmbedding[i];\n                    let valB = embeddings[embeddingOffset + i];\n                    dotProduct = dotProduct + valA * valB;\n                    magA_sq = magA_sq + valA * valA;\n                    magB_sq = magB_sq + valB * valB;\n                }\n\n                let magnitudeA = sqrt(magA_sq);\n                let magnitudeB = sqrt(magB_sq);\n\n                var similarity: f32 = 0.0;\n                if (magnitudeA > 0.0 && magnitudeB > 0.0) {\n                    similarity = dotProduct / (magnitudeA * magnitudeB);\n                }\n                \n                output[idx] = similarity;\n            }\n        `;\n    }\n\n    /**\n     * Calcula similaridade usando CPU como fallback\n     * @param {Float32Array} targetEmbedding - Embedding alvo\n     * @param {Float32Array[]} embeddings - Array de embeddings\n     * @returns {number[]} Array de similaridades\n     */\n    computeCosineSimilarityCPU(targetEmbedding, embeddings) {\n        return embeddings.map(embedding => {\n            const dotProduct = targetEmbedding.reduce((sum, a, i) => sum + a * embedding[i], 0);\n            const magnitudeA = Math.sqrt(targetEmbedding.reduce((sum, a) => sum + a * a, 0));\n            const magnitudeB = Math.sqrt(embedding.reduce((sum, b) => sum + b * b, 0));\n            return dotProduct / (magnitudeA * magnitudeB);\n        });\n    }\n\n    /**\n     * Destr√≥i buffers GPU para liberar mem√≥ria\n     * @param {GPUBuffer[]} buffers - Array de buffers para destruir\n     */\n    destroyBuffers(buffers) {\n        buffers.forEach(buffer => {\n            if (buffer && typeof buffer.destroy === 'function') {\n                buffer.destroy();\n            }\n        });\n    }\n\n    /**\n     * Obt√©m informa√ß√µes sobre o dispositivo WebGPU\n     * @returns {Object} Informa√ß√µes do dispositivo\n     */\n    getDeviceInfo() {\n        if (!this.device) {\n            return null;\n        }\n\n        return {\n            supported: this.isSupported,\n            initialized: this.isInitialized,\n            limits: {\n                maxWorkgroupSize: this.device.limits?.maxComputeWorkgroupSizeX || 'desconhecido',\n                maxStorageBufferSize: this.device.limits?.maxStorageBufferBindingSize || 'desconhecido'\n            }\n        };\n    }\n\n    /**\n     * Calcula n√∫mero ideal de workgroups\n     * @param {number} totalItems - Total de itens para processar\n     * @param {number} workgroupSize - Tamanho do workgroup\n     * @returns {number} N√∫mero de workgroups\n     */\n    calculateOptimalWorkgroups(totalItems, workgroupSize = 64) {\n        return Math.ceil(totalItems / workgroupSize);\n    }\n\n    /**\n     * Limpa recursos e finaliza engine\n     */\n    dispose() {\n        this.device = null;\n        this.isSupported = false;\n        this.isInitialized = false;\n        console.log('üßπ WebGPU Engine finalizado');\n    }\n} ","import * as d3 from 'd3';\n\n// M√≥dulo de Visualiza√ß√£o\n// Sistema de visualiza√ß√£o interativa usando D3.js\n\nexport class VisualizationEngine {\n    constructor(containerElement, categoryColors) {\n        this.container = containerElement;\n        this.categoryColors = categoryColors;\n        this.svg = null;\n        this.container_g = null;\n        this.zoom = null;\n        this.simulation = null;\n    }\n\n    /**\n     * Renderiza grafo interativo com navega√ß√£o\n     * @param {Array} results - Resultados para visualizar\n     * @param {Array} inputWords - Palavras de entrada para filtrar\n     * @param {string} centralWord - Palavra/express√£o central\n     * @param {Function} onNodeClick - Callback para clique em n√≥s\n     * @param {Function} getEmbedding - Fun√ß√£o para obter embeddings\n     * @param {Function} computeSimilarities - Fun√ß√£o para computar similaridades\n     * @param {Object} semanticCategories - Sistema de categorias\n     * @returns {Promise<void>}\n     */\n    async renderInteractiveGraph(results, inputWords, centralWord, onNodeClick, getEmbedding, computeSimilarities, semanticCategories) {\n        console.log('üéØ VisualizationEngine.renderInteractiveGraph iniciado');\n        console.log('üìä Par√¢metros recebidos:', {\n            results: results?.length,\n            inputWords: inputWords?.length,\n            centralWord,\n            hasGetEmbedding: typeof getEmbedding === 'function',\n            hasComputeSimilarities: typeof computeSimilarities === 'function',\n            hasSemanticCategories: !!semanticCategories\n        });\n        \n        // Limpeza total\n        this.clearGraph();\n        console.log('üßπ Grafo limpo');\n        \n        const width = this.container.clientWidth;\n        const height = this.container.clientHeight;\n        console.log('üìê Dimens√µes do container:', { width, height });\n        \n        // Criar SVG com navega√ß√£o\n        this.svg = d3.select(this.container)\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height)\n            .style('cursor', 'grab');\n        \n        // Container para elementos que sofrem zoom\n        this.container_g = this.svg.append('g')\n            .attr('class', 'zoom-container');\n        \n        console.log('üñºÔ∏è SVG criado');\n        \n        // Configurar zoom e pan\n        this.setupZoomBehavior();\n        console.log('üîç Zoom configurado');\n        \n        // Criar controles de navega√ß√£o\n        this.createNavigationControls();\n        console.log('üéõÔ∏è Controles criados');\n        \n        try {\n            // Preparar dados do grafo\n            console.log('‚öôÔ∏è Preparando dados do grafo...');\n            const { nodes, links } = await this.prepareGraphData(results, inputWords, centralWord, getEmbedding, computeSimilarities, semanticCategories);\n            console.log('üìà Dados preparados:', { nodes: nodes?.length, links: links?.length });\n            \n            // Renderizar elementos\n            console.log('üé® Renderizando elementos...');\n            this.renderLinks(links);\n            this.renderNodes(nodes, onNodeClick);\n            this.renderLabels(nodes);\n            console.log('üé≠ Elementos renderizados');\n            \n            // Configurar simula√ß√£o f√≠sica\n            console.log('‚ö° Configurando simula√ß√£o f√≠sica...');\n            this.setupSimulation(nodes, links, width, height);\n            console.log('üîÑ Simula√ß√£o configurada');\n            \n            console.log('‚úÖ Grafo NAVEG√ÅVEL renderizado com sucesso!');\n        } catch (error) {\n            console.error('‚ùå Erro durante renderiza√ß√£o do grafo:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Configura comportamento de zoom e pan\n     */\n    setupZoomBehavior() {\n        this.zoom = d3.zoom()\n            .scaleExtent([0.3, 3])\n            .on('zoom', (event) => {\n                this.container_g.attr('transform', event.transform);\n            })\n            .on('start', () => {\n                this.svg.style('cursor', 'grabbing');\n            })\n            .on('end', () => {\n                this.svg.style('cursor', 'grab');\n            });\n        \n        this.svg.call(this.zoom);\n    }\n\n    /**\n     * Cria controles de navega√ß√£o\n     */\n    createNavigationControls() {\n        const controls = d3.select(this.container)\n            .append('div')\n            .attr('class', 'graph-controls')\n            .style('position', 'absolute')\n            .style('top', '10px')\n            .style('right', '10px')\n            .style('display', 'flex')\n            .style('flex-direction', 'column')\n            .style('gap', '5px')\n            .style('z-index', '1000');\n        \n        // Bot√£o zoom in\n        this.createControlButton(controls, '+', 'Zoom In', () => {\n            this.svg.transition().duration(300).call(this.zoom.scaleBy, 1.5);\n        });\n        \n        // Bot√£o zoom out\n        this.createControlButton(controls, '‚àí', 'Zoom Out', () => {\n            this.svg.transition().duration(300).call(this.zoom.scaleBy, 0.67);\n        });\n        \n        // Bot√£o reset\n        this.createControlButton(controls, '‚åÇ', 'Centralizar', () => {\n            this.svg.transition().duration(500).call(\n                this.zoom.transform,\n                d3.zoomIdentity.translate(0, 0).scale(1)\n            );\n        });\n        \n        // Indicador de navega√ß√£o\n        this.createNavigationHint();\n    }\n\n    /**\n     * Cria bot√£o de controle\n     */\n    createControlButton(parent, text, title, onClick) {\n        parent.append('button')\n            .attr('class', 'zoom-btn')\n            .style('width', '40px')\n            .style('height', '40px')\n            .style('border', 'none')\n            .style('border-radius', '50%')\n            .style('background', '#6366f1')\n            .style('color', 'white')\n            .style('font-size', text === '‚åÇ' ? '14px' : '18px')\n            .style('font-weight', 'bold')\n            .style('cursor', 'pointer')\n            .style('box-shadow', '0 2px 8px rgba(0,0,0,0.15)')\n            .style('transition', 'all 0.2s')\n            .text(text)\n            .attr('title', title)\n            .on('click', onClick)\n            .on('mouseover', function() {\n                d3.select(this).style('background', '#5855eb');\n            })\n            .on('mouseout', function() {\n                d3.select(this).style('background', '#6366f1');\n            });\n    }\n\n    /**\n     * Cria indicador de navega√ß√£o\n     */\n    createNavigationHint() {\n        const navHint = d3.select(this.container)\n            .append('div')\n            .style('position', 'absolute')\n            .style('bottom', '10px')\n            .style('left', '10px')\n            .style('background', 'rgba(0,0,0,0.7)')\n            .style('color', 'white')\n            .style('padding', '8px 12px')\n            .style('border-radius', '5px')\n            .style('font-size', '12px')\n            .style('pointer-events', 'none')\n            .style('z-index', '1000')\n            .html('üñ±Ô∏è Arrastar: mover ‚Ä¢ üîÑ Scroll: zoom ‚Ä¢ üéØ Clique: buscar');\n        \n        setTimeout(() => {\n            navHint.transition().duration(1000).style('opacity', 0).remove();\n        }, 5000);\n    }\n\n    /**\n     * Prepara dados para o grafo (primeiro e segundo n√≠vel)\n     * @param {Array} results - Resultados principais\n     * @param {Array} inputWords - Palavras de entrada\n     * @param {string} centralWord - Palavra central\n     * @param {Function} getEmbedding - Fun√ß√£o para obter embeddings\n     * @param {Function} computeSimilarities - Fun√ß√£o para computar similaridades\n     * @param {Object} semanticCategories - Sistema de categorias\n     * @returns {Object} N√≥s e links do grafo\n     */\n    async prepareGraphData(results, inputWords, centralWord, getEmbedding, computeSimilarities, semanticCategories) {\n        console.log('üìä prepareGraphData iniciado');\n        \n        // Primeiro n√≠vel (8 palavras)\n        const firstLevelResults = results.slice(0, 8);\n        console.log('üìå Primeiro n√≠vel:', firstLevelResults.map(r => r.word));\n        \n        console.log('üîó Calculando segundo n√≠vel do grafo...');\n        const secondLevelNodes = new Map();\n        \n        // SEGUNDO N√çVEL: Calcular palavras relacionadas aos primeiros 2 resultados\n        for (const result of firstLevelResults.slice(0, 2)) { // Usar 2 primeiros para segundo n√≠vel\n            try {\n                console.log(`üîç Calculando segundo n√≠vel para: ${result.word}`);\n                \n                if (!getEmbedding || typeof getEmbedding !== 'function') {\n                    console.error('‚ùå getEmbedding n√£o √© uma fun√ß√£o v√°lida:', typeof getEmbedding);\n                    break;\n                }\n                \n                const relatedEmbedding = await getEmbedding(result.word);\n                console.log(`‚úÖ Embedding obtido para ${result.word}:`, relatedEmbedding?.length, 'dimens√µes');\n                \n                if (!semanticCategories || typeof semanticCategories.getVocabulary !== 'function') {\n                    console.error('‚ùå semanticCategories n√£o √© v√°lido:', semanticCategories);\n                    break;\n                }\n                \n                const vocabulary = semanticCategories.getVocabulary();\n                console.log(`üìö Vocabul√°rio obtido:`, vocabulary?.length, 'palavras');\n                \n                const wordsToCompare = vocabulary.filter(w => \n                    w.toLowerCase() !== result.word.toLowerCase() &&\n                    !firstLevelResults.some(fr => fr.word.toLowerCase() === w.toLowerCase()) &&\n                    !inputWords.includes(w.toLowerCase())\n                );\n                \n                console.log(`üîé Palavras para comparar com ${result.word}:`, wordsToCompare.length);\n                \n                // Calcular embeddings em lotes para o segundo n√≠vel\n                const embeddings = [];\n                const batchSize = 15; // Lotes menores para segundo n√≠vel\n                \n                console.log(`‚öôÔ∏è Processando embeddings em lotes de ${batchSize}...`);\n                for (let i = 0; i < Math.min(wordsToCompare.length, 60); i += batchSize) {\n                    const batch = wordsToCompare.slice(i, i + batchSize);\n                    console.log(`   Lote ${Math.floor(i/batchSize) + 1}:`, batch);\n                    \n                    const batchEmbeddings = await Promise.all(\n                        batch.map(w => getEmbedding(w))\n                    );\n                    embeddings.push(...batchEmbeddings);\n                    console.log(`   ‚úÖ Lote processado, total: ${embeddings.length} embeddings`);\n                }\n                \n                if (!computeSimilarities || typeof computeSimilarities !== 'function') {\n                    console.error('‚ùå computeSimilarities n√£o √© uma fun√ß√£o v√°lida:', typeof computeSimilarities);\n                    break;\n                }\n                \n                console.log(`üî¢ Calculando similaridades...`);\n                const similarities = await computeSimilarities(relatedEmbedding, embeddings);\n                console.log(`‚úÖ Similaridades calculadas:`, similarities?.length);\n                \n                const secondLevelCandidates = wordsToCompare.slice(0, embeddings.length)\n                    .map((w, i) => ({\n                        word: w,\n                        similarity: similarities[i],\n                        category: semanticCategories.getCategoryForWord(w).name,\n                        parentWord: result.word\n                    }))\n                    .filter(r => r.similarity >= 0.55) // Threshold para segundo n√≠vel\n                    .sort((a, b) => b.similarity - a.similarity)\n                    .slice(0, 3); // 3 palavras por n√≥ do primeiro n√≠vel\n                \n                console.log(`üìà Segundo n√≠vel para \"${result.word}\":`, secondLevelCandidates.map(c => c.word));\n                \n                secondLevelCandidates.forEach(candidate => {\n                    if (!secondLevelNodes.has(candidate.word)) {\n                        secondLevelNodes.set(candidate.word, candidate);\n                    }\n                });\n                \n            } catch (error) {\n                console.error(`‚ùå Erro ao calcular segundo n√≠vel para ${result.word}:`, error);\n            }\n        }\n        \n        const secondLevelResults = Array.from(secondLevelNodes.values());\n        console.log(`‚úÖ Segundo n√≠vel calculado: ${secondLevelResults.length} n√≥s adicionais`);\n        \n        // Construir n√≥s\n        const nodes = [];\n        \n        // N√≥ central\n        nodes.push({\n            id: centralWord,\n            similarity: 1,\n            category: 'central',\n            level: 'central',\n            size: 28\n        });\n        console.log(`‚ûï N√≥ central adicionado: ${centralWord}`);\n        \n        // N√≥s do primeiro n√≠vel\n        firstLevelResults.forEach((result, index) => {\n            nodes.push({\n                id: result.word,\n                similarity: result.similarity,\n                category: result.category,\n                level: 'first',\n                size: 14 + result.similarity * 10,\n                index: index\n            });\n        });\n        console.log(`‚ûï ${firstLevelResults.length} n√≥s do primeiro n√≠vel adicionados`);\n        \n        // N√≥s do segundo n√≠vel\n        secondLevelResults.forEach((result, index) => {\n            nodes.push({\n                id: result.word,\n                similarity: result.similarity,\n                category: result.category,\n                level: 'second',\n                size: 8 + result.similarity * 5,\n                parentWord: result.parentWord,\n                index: index\n            });\n        });\n        console.log(`‚ûï ${secondLevelResults.length} n√≥s do segundo n√≠vel adicionados`);\n        \n        console.log('üìç Todos os n√≥s do grafo:', nodes.map(n => `${n.id}(${n.level})`));\n        \n        // Construir links\n        const links = [];\n        \n        // Links do centro para primeiro n√≠vel\n        firstLevelResults.forEach(result => {\n            links.push({\n                source: centralWord,\n                target: result.word,\n                similarity: result.similarity,\n                level: 'first',\n                strength: result.similarity\n            });\n        });\n        console.log(`üîó ${firstLevelResults.length} links do primeiro n√≠vel adicionados`);\n        \n        // Links do primeiro n√≠vel para segundo n√≠vel\n        secondLevelResults.forEach(result => {\n            if (result.parentWord) {\n                links.push({\n                    source: result.parentWord,\n                    target: result.word,\n                    similarity: result.similarity,\n                    level: 'second',\n                    strength: result.similarity * 0.8\n                });\n            }\n        });\n        \n        console.log('üîó Links do grafo:', links.length, 'conex√µes');\n        console.log('‚úÖ prepareGraphData conclu√≠do');\n        \n        return { nodes, links };\n    }\n\n    /**\n     * Renderiza links do grafo\n     */\n    renderLinks(links) {\n        this.container_g.append('g')\n            .selectAll('line')\n            .data(links)\n            .enter().append('line')\n            .attr('stroke', d => {\n                if (d.level === 'first') return '#6366f1';\n                if (d.level === 'second') return '#94a3b8';\n                return '#999';\n            })\n            .attr('stroke-opacity', d => {\n                if (d.level === 'first') return 0.8;\n                if (d.level === 'second') return 0.6;\n                return 0.7;\n            })\n            .attr('stroke-width', d => {\n                if (d.level === 'first') return Math.sqrt(d.similarity * 8);\n                if (d.level === 'second') return Math.sqrt(d.similarity * 4);\n                return 2;\n            });\n    }\n\n    /**\n     * Renderiza n√≥s do grafo\n     */\n    renderNodes(nodes, onNodeClick) {\n        const nodeSelection = this.container_g.append('g')\n            .selectAll('circle')\n            .data(nodes)\n            .enter().append('circle')\n            .attr('r', d => d.size)\n            .attr('fill', d => this.getNodeColor(d))\n            .attr('stroke', '#fff')\n            .attr('stroke-width', d => this.getStrokeWidth(d))\n            .style('cursor', 'pointer');\n        \n        // Eventos de intera√ß√£o\n        nodeSelection.on('click', (event, d) => {\n            event.stopPropagation();\n            if (d.level !== 'central' && onNodeClick) {\n                onNodeClick(d.id);\n            }\n        });\n        \n        // Hover effects\n        nodeSelection.on('mouseover', this.handleNodeHover.bind(this));\n        nodeSelection.on('mouseout', this.handleNodeUnhover.bind(this));\n    }\n\n    /**\n     * Renderiza labels dos n√≥s\n     */\n    renderLabels(nodes) {\n        this.container_g.append('g')\n            .selectAll('text')\n            .data(nodes)\n            .enter().append('text')\n            .text(d => d.id)\n            .attr('font-size', d => this.getFontSize(d))\n            .attr('font-weight', d => this.getFontWeight(d))\n            .attr('text-anchor', 'middle')\n            .attr('dy', '.35em')\n            .attr('fill', d => d.level === 'second' ? '#64748b' : '#1e293b')\n            .style('pointer-events', 'none')\n            .style('text-shadow', '1px 1px 2px rgba(255, 255, 255, 0.8)');\n    }\n\n    /**\n     * Configura simula√ß√£o f√≠sica D3\n     */\n    setupSimulation(nodes, links, width, height) {\n        this.simulation = d3.forceSimulation(nodes)\n            .force('link', d3.forceLink(links)\n                .id(d => d.id)\n                .distance(d => {\n                    if (d.level === 'first') return 130;\n                    if (d.level === 'second') return 90;\n                    return 110;\n                })\n                .strength(d => d.strength)\n            )\n            .force('charge', d3.forceManyBody()\n                .strength(d => {\n                    if (d.level === 'central') return -1000;\n                    if (d.level === 'first') return -450;\n                    if (d.level === 'second') return -250;\n                    return -350;\n                })\n            )\n            .force('center', d3.forceCenter(width / 2, height / 2))\n            .force('collision', d3.forceCollide()\n                .radius(d => d.size + 8)\n            );\n        \n        // Atualizar posi√ß√µes a cada tick\n        this.simulation.on('tick', () => {\n            this.updatePositions();\n        });\n    }\n\n    /**\n     * Atualiza posi√ß√µes dos elementos\n     */\n    updatePositions() {\n        this.container_g.selectAll('line')\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);\n        \n        this.container_g.selectAll('circle')\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        \n        this.container_g.selectAll('text')\n            .attr('x', d => d.x)\n            .attr('y', d => d.y);\n    }\n\n    /**\n     * Obt√©m cor do n√≥ baseada na categoria\n     */\n    getNodeColor(d) {\n        if (d.level === 'central') return '#6366f1';\n        \n        const baseColor = this.categoryColors[d.category] || '#374151';\n        \n        if (d.level === 'second') {\n            return baseColor + '99'; // 60% opacidade\n        }\n        \n        return baseColor;\n    }\n\n    /**\n     * Obt√©m largura do stroke baseada no n√≠vel\n     */\n    getStrokeWidth(d) {\n        if (d.level === 'central') return 4;\n        if (d.level === 'first') return 3;\n        return 2;\n    }\n\n    /**\n     * Obt√©m tamanho da fonte baseado no n√≠vel\n     */\n    getFontSize(d) {\n        if (d.level === 'central') return '15px';\n        if (d.level === 'first') return '12px';\n        return '10px';\n    }\n\n    /**\n     * Obt√©m peso da fonte baseado no n√≠vel\n     */\n    getFontWeight(d) {\n        if (d.level === 'central') return 'bold';\n        if (d.level === 'first') return '600';\n        return '500';\n    }\n\n    /**\n     * Manipula hover do n√≥\n     */\n    handleNodeHover(event, d) {\n        d3.select(event.target)\n            .transition()\n            .duration(200)\n            .attr('r', d.size * 1.3)\n            .attr('stroke-width', d.level === 'central' ? 5 : 4);\n        \n        // Highlight das conex√µes\n        this.container_g.selectAll('line')\n            .transition()\n            .duration(200)\n            .attr('stroke-opacity', l => {\n                if (l.source.id === d.id || l.target.id === d.id) {\n                    return l.level === 'first' ? 1.0 : 0.9;\n                }\n                return l.level === 'first' ? 0.2 : 0.1;\n            });\n    }\n\n    /**\n     * Manipula unhover do n√≥\n     */\n    handleNodeUnhover(event, d) {\n        d3.select(event.target)\n            .transition()\n            .duration(200)\n            .attr('r', d.size)\n            .attr('stroke-width', this.getStrokeWidth(d));\n        \n        // Restaurar opacidade\n        this.container_g.selectAll('line')\n            .transition()\n            .duration(200)\n            .attr('stroke-opacity', l => l.level === 'first' ? 0.8 : 0.6);\n    }\n\n    /**\n     * Limpa grafo completamente\n     */\n    clearGraph() {\n        this.container.innerHTML = '';\n        \n        if (this.simulation) {\n            this.simulation.stop();\n            this.simulation = null;\n        }\n        \n        this.svg = null;\n        this.container_g = null;\n        this.zoom = null;\n    }\n\n    /**\n     * Renderiza lista de resultados\n     * @param {Array} results - Resultados para exibir\n     * @param {Element} listContainer - Container da lista\n     * @param {Function} onItemClick - Callback para clique em item\n     */\n    renderResultsList(results, listContainer, onItemClick) {\n        listContainer.innerHTML = '';\n        \n        results.forEach((result, index) => {\n            const wordItem = document.createElement('div');\n            wordItem.className = 'word-item';\n            wordItem.style.animationDelay = `${index * 0.05}s`;\n            \n            const percentage = Math.round(result.similarity * 100);\n            const categoryColor = this.categoryColors[result.category] || '#374151';\n            \n            wordItem.innerHTML = `\n                <div class=\"word-text\">\n                    ${result.word}\n                    <span class=\"category-badge\" style=\"background-color: ${categoryColor}\">${result.category}</span>\n                </div>\n                <div class=\"similarity-score\">${percentage}% similar</div>\n                <div class=\"similarity-bar\">\n                    <div class=\"similarity-fill\" style=\"width: ${percentage}%\"></div>\n                </div>\n            `;\n            \n            wordItem.addEventListener('click', () => {\n                if (onItemClick) {\n                    onItemClick(result.word);\n                }\n            });\n            \n            listContainer.appendChild(wordItem);\n        });\n    }\n\n    /**\n     * Finaliza e limpa recursos\n     */\n    dispose() {\n        this.clearGraph();\n        console.log('üé® Visualization Engine finalizado');\n    }\n} "],"names":["SemanticCategories","constructor","this","categories","realeza","weight","words","related","pessoas","objetos","natureza","abstratos","getVocabulary","allWords","Set","Object","values","forEach","category","word","add","Array","from","getCategoryForWord","lowerWord","toLowerCase","categoryName","entries","includes","name","calculateAdvancedSimilarity","word1","word2","cosineSimilarity","category1","category2","categoryBonus","Math","abs","length","getCategoryColors","geral","getStats","stats","totalWords","total","WebGPUEngine","device","isSupported","isInitialized","initialize","navigator","gpu","console","log","adapter","requestAdapter","requestDevice","error","computeCosineSimilarity","targetEmbedding","embeddings","Error","targetSize","numEmbeddings","embeddingSize","targetBuffer","createBuffer","size","usage","GPUBufferUsage","STORAGE","COPY_DST","queue","writeBuffer","Float32Array","embeddingsBuffer","flat","outputBuffer","COPY_SRC","shaderModule","createShaderModule","code","createCosineSimilarityShader","bindGroupLayout","createBindGroupLayout","binding","visibility","GPUShaderStage","COMPUTE","buffer","type","pipelineLayout","createPipelineLayout","bindGroupLayouts","computePipeline","createComputePipeline","layout","compute","module","entryPoint","bindGroup","createBindGroup","resource","commandEncoder","createCommandEncoder","passEncoder","beginComputePass","setPipeline","setBindGroup","workgroupCount","ceil","dispatchWorkgroups","end","gpuReadBuffer","MAP_READ","copyBufferToBuffer","submit","finish","mapAsync","GPUMapMode","READ","resultData","getMappedRange","similarities","unmap","destroyBuffers","computeCosineSimilarityCPU","map","embedding","reduce","sum","a","i","sqrt","b","buffers","destroy","getDeviceInfo","supported","initialized","limits","maxWorkgroupSize","maxComputeWorkgroupSizeX","maxStorageBufferSize","maxStorageBufferBindingSize","calculateOptimalWorkgroups","totalItems","workgroupSize","dispose","VisualizationEngine","containerElement","categoryColors","container","svg","container_g","zoom","simulation","renderInteractiveGraph","results","inputWords","centralWord","onNodeClick","getEmbedding","computeSimilarities","semanticCategories","hasGetEmbedding","hasComputeSimilarities","hasSemanticCategories","clearGraph","width","clientWidth","height","clientHeight","d3.select","append","attr","style","setupZoomBehavior","createNavigationControls","nodes","links","prepareGraphData","renderLinks","renderNodes","renderLabels","setupSimulation","d3.zoom","scaleExtent","on","event","transform","call","controls","createControlButton","transition","duration","scaleBy","d3.zoomIdentity","translate","scale","createNavigationHint","parent","text","title","onClick","navHint","html","setTimeout","remove","firstLevelResults","slice","r","secondLevelNodes","Map","result","relatedEmbedding","vocabulary","wordsToCompare","filter","w","some","fr","batchSize","min","batch","floor","batchEmbeddings","Promise","all","push","secondLevelCandidates","similarity","parentWord","sort","c","candidate","has","set","secondLevelResults","id","level","index","n","source","target","strength","selectAll","data","enter","d","nodeSelection","getNodeColor","getStrokeWidth","stopPropagation","handleNodeHover","bind","handleNodeUnhover","getFontSize","getFontWeight","d3.forceSimulation","force","d3.forceLink","distance","d3.forceManyBody","d3.forceCenter","d3.forceCollide","radius","updatePositions","x","y","baseColor","select","l","innerHTML","stop","renderResultsList","listContainer","onItemClick","wordItem","document","createElement","className","animationDelay","percentage","round","categoryColor","addEventListener","appendChild"],"mappings":"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"}