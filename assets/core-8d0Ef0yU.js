import{s as e,z as o,i as t,a,l as i,m as r,c as s,b as n}from"./vendor-DloOgCCB.js";class l{constructor(){this.categories={realeza:{weight:2,words:["rei","rainha","pr√≠ncipe","princesa","imperador","imperatriz","monarca","coroa","trono","pal√°cio","reino","imp√©rio","nobre","duque","duquesa","conde","condessa","bar√£o","baronesa"],related:["poder","governo","autoridade","estado","pa√≠s","comandar","liderar","soberano","majestade","real","nobreza"]},"fam√≠lia":{weight:2.5,words:["pai","m√£e","filho","filha","irm√£o","irm√£","av√¥","av√≥","bisav√¥","bisav√≥","tio","tia","primo","prima","marido","esposa","namorado","namorada","noivo","noiva","fam√≠lia","parente","cunhado","cunhada","sogro","sogra"],related:["amor","carinho","casa","lar","uni√£o","relacionamento","casamento","parentesco","la√ßo","v√≠nculo"]},pessoas:{weight:2,words:["homem","mulher","crian√ßa","jovem","adulto","adulta","idoso","idosa","beb√™","menino","menina","rapaz","mo√ßa","pessoa","gente","indiv√≠duo","ser","humano","cidad√£o","cidad√£"],related:["vida","sociedade","comunidade","popula√ß√£o","humanidade","g√™nero","idade"]},"profiss√µes":{weight:2,words:["m√©dico","m√©dica","doutora","enfermeiro","enfermeira","professor","professora","engenheiro","engenheira","advogado","advogada","policial","bombeiro","bombeira","dentista","veterin√°rio","veterin√°ria","cozinheiro","cozinheira","gar√ßom","gar√ßonete","motorista","piloto","soldado","artista","m√∫sico","escritor","escritora","jornalista","arquiteto","arquiteta","psic√≥logo","psic√≥loga","farmac√™utico","farmac√™utica","contador","contadora"],related:["trabalho","carreira","profiss√£o","emprego","sal√°rio","ocupa√ß√£o","of√≠cio","especialista"]},"emo√ß√µes":{weight:2.5,words:["amor","felicidade","tristeza","raiva","medo","alegria","saudade","esperan√ßa","paz","paix√£o","√≥dio","inveja","ci√∫me","carinho","amizade","bondade","compaix√£o","gratid√£o","ansiedade","nervosismo","calma","serenidade","entusiasmo","melancolia"],related:["sentimento","cora√ß√£o","alma","esp√≠rito","emocional","afeto","humor","estado"]},objetos:{weight:1.5,words:["casa","carro","livro","telefone","computador","mesa","cadeira","cama","sof√°","televis√£o","roupa","sapato","rel√≥gio","chave","dinheiro","porta","janela","espelho","l√¢mpada","geladeira"],related:["objeto","coisa","item","material","produto","utens√≠lio","ferramenta","equipamento"]},natureza:{weight:2,words:["√°gua","fogo","terra","ar","sol","lua","estrela","nuvem","chuva","vento","√°rvore","flor","planta","animal","cachorro","gato","p√°ssaro","peixe","borboleta","abelha","floresta","montanha","rio","mar","oceano"],related:["natural","ambiente","mundo","planeta","universo","ecologia","vida","selvagem"]},abstratos:{weight:1.8,words:["vida","morte","tempo","espa√ßo","conhecimento","sabedoria","verdade","mentira","liberdade","justi√ßa","poder","for√ßa","energia","destino","sorte","futuro","passado","presente"],related:["conceito","ideia","pensamento","filosofia","abstrato","teoria","princ√≠pio"]}}}getVocabulary(){const e=new Set;return Object.values(this.categories).forEach((o=>{o.words.forEach((o=>e.add(o))),o.related.forEach((o=>e.add(o)))})),Array.from(e)}getCategoryForWord(e){const o=e.toLowerCase();for(const[t,a]of Object.entries(this.categories))if(a.words.includes(o)||a.related.includes(o))return{name:t,weight:a.weight};return{name:"geral",weight:1}}calculateAdvancedSimilarity(e,o,t){const a=this.getCategoryForWord(e),i=this.getCategoryForWord(o);let r=1;a.name===i.name&&"geral"!==a.name&&(r=1.1);return t*r*(Math.abs(e.length-o.length)>8?.9:1)}getCategoryColors(){return{realeza:"#f59e0b","fam√≠lia":"#ef4444",pessoas:"#10b981","profiss√µes":"#8b5cf6","emo√ß√µes":"#f97316",objetos:"#6b7280",natureza:"#059669",abstratos:"#7c3aed",geral:"#374151"}}getStats(){const e={totalWords:0,categories:{}};return Object.entries(this.categories).forEach((([o,t])=>{const a=t.words.length+t.related.length;e.categories[o]={words:t.words.length,related:t.related.length,total:a,weight:t.weight},e.totalWords+=a})),e}}class d{constructor(){this.device=null,this.isSupported=!1,this.isInitialized=!1}async initialize(){try{if(!navigator.gpu)return console.log("WebGPU n√£o suportado neste navegador"),!1;const e=await navigator.gpu.requestAdapter();return e?(this.device=await e.requestDevice(),this.isSupported=!0,this.isInitialized=!0,console.log("üöÄ WebGPU Engine inicializado com sucesso!"),!0):(console.log("Adaptador WebGPU n√£o encontrado"),!1)}catch(e){return console.log("WebGPU n√£o dispon√≠vel:",e),this.isSupported=!1,this.isInitialized=!1,!1}}async computeCosineSimilarity(e,o){if(!this.isSupported||!this.device)throw new Error("WebGPU n√£o est√° dispon√≠vel");const t=e.length,a=o.length,i=t,r=this.device.createBuffer({size:4*t,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST});this.device.queue.writeBuffer(r,0,new Float32Array(e));const s=this.device.createBuffer({size:a*i*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST});this.device.queue.writeBuffer(s,0,new Float32Array(o.flat()));const n=this.device.createBuffer({size:4*a,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC}),l=this.device.createShaderModule({code:this.createCosineSimilarityShader(a,i)}),d=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}]}),c=this.device.createPipelineLayout({bindGroupLayouts:[d]}),g=await this.device.createComputePipeline({layout:c,compute:{module:l,entryPoint:"main"}}),u=this.device.createBindGroup({layout:d,entries:[{binding:0,resource:{buffer:r}},{binding:1,resource:{buffer:s}},{binding:2,resource:{buffer:n}}]}),h=this.device.createCommandEncoder(),p=h.beginComputePass();p.setPipeline(g),p.setBindGroup(0,u);const m=Math.ceil(a/64);p.dispatchWorkgroups(m),p.end();const f=this.device.createBuffer({size:4*a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});h.copyBufferToBuffer(n,0,f,0,4*a),this.device.queue.submit([h.finish()]),await f.mapAsync(GPUMapMode.READ);const v=new Float32Array(f.getMappedRange()),y=Array.from(v);return f.unmap(),this.destroyBuffers([r,s,n,f]),y}createCosineSimilarityShader(e,o){return`\n            @group(0) @binding(0) var<storage, read> targetEmbedding: array<f32>;\n            @group(0) @binding(1) var<storage, read> embeddings: array<f32>;\n            @group(0) @binding(2) var<storage, read_write> output: array<f32>;\n\n            @workgroup_size(64) // Otimizado para a maioria das GPUs\n            @compute\n            fn main(@builtin(global_invocation_id) global_id: vec3<u32>) {\n                let idx = global_id.x;\n                if (idx >= ${e}u) {\n                    return;\n                }\n\n                let embeddingOffset = idx * ${o}u;\n                var dotProduct: f32 = 0.0;\n                var magA_sq: f32 = 0.0;\n                var magB_sq: f32 = 0.0;\n\n                // Calcular produto escalar e magnitudes em paralelo\n                // Loop desenrolado para melhor performance\n                for (var i = 0u; i < ${o}u; i = i + 1u) {\n                    let valA = targetEmbedding[i];\n                    let valB = embeddings[embeddingOffset + i];\n                    dotProduct = dotProduct + valA * valB;\n                    magA_sq = magA_sq + valA * valA;\n                    magB_sq = magB_sq + valB * valB;\n                }\n\n                let magnitudeA = sqrt(magA_sq);\n                let magnitudeB = sqrt(magB_sq);\n\n                var similarity: f32 = 0.0;\n                if (magnitudeA > 0.0 && magnitudeB > 0.0) {\n                    similarity = dotProduct / (magnitudeA * magnitudeB);\n                }\n                \n                output[idx] = similarity;\n            }\n        `}computeCosineSimilarityCPU(e,o){return o.map((o=>e.reduce(((e,t,a)=>e+t*o[a]),0)/(Math.sqrt(e.reduce(((e,o)=>e+o*o),0))*Math.sqrt(o.reduce(((e,o)=>e+o*o),0)))))}destroyBuffers(e){e.forEach((e=>{e&&"function"==typeof e.destroy&&e.destroy()}))}getDeviceInfo(){return this.device?{supported:this.isSupported,initialized:this.isInitialized,limits:{maxWorkgroupSize:this.device.limits?.maxComputeWorkgroupSizeX||"desconhecido",maxStorageBufferSize:this.device.limits?.maxStorageBufferBindingSize||"desconhecido"}}:null}calculateOptimalWorkgroups(e,o=64){return Math.ceil(e/o)}dispose(){this.device=null,this.isSupported=!1,this.isInitialized=!1,console.log("üßπ WebGPU Engine finalizado")}}class c{constructor(e,o){this.container=e,this.categoryColors=o,this.svg=null,this.container_g=null,this.zoom=null,this.simulation=null}async renderInteractiveGraph(o,t,a,i,r,s,n){console.log("üéØ VisualizationEngine.renderInteractiveGraph iniciado"),console.log("üìä Par√¢metros recebidos:",{results:o?.length,inputWords:t?.length,centralWord:a,hasGetEmbedding:"function"==typeof r,hasComputeSimilarities:"function"==typeof s,hasSemanticCategories:!!n}),this.clearGraph(),console.log("üßπ Grafo limpo");const l=this.container.clientWidth,d=this.container.clientHeight;console.log("üìê Dimens√µes do container:",{width:l,height:d}),this.svg=e(this.container).append("svg").attr("width",l).attr("height",d).style("cursor","grab"),this.container_g=this.svg.append("g").attr("class","zoom-container"),console.log("üñºÔ∏è SVG criado"),this.setupZoomBehavior(),console.log("üîç Zoom configurado"),this.createNavigationControls(),console.log("üéõÔ∏è Controles criados");try{console.log("‚öôÔ∏è Preparando dados do grafo...");const{nodes:e,links:c}=await this.prepareGraphData(o,t,a,r,s,n);console.log("üìà Dados preparados:",{nodes:e?.length,links:c?.length}),console.log("üé® Renderizando elementos..."),this.renderLinks(c),this.renderNodes(e,i),this.renderLabels(e),console.log("üé≠ Elementos renderizados"),console.log("‚ö° Configurando simula√ß√£o f√≠sica..."),this.setupSimulation(e,c,l,d),console.log("üîÑ Simula√ß√£o configurada"),console.log("‚úÖ Grafo NAVEG√ÅVEL renderizado com sucesso!")}catch(c){throw console.error("‚ùå Erro durante renderiza√ß√£o do grafo:",c),c}}setupZoomBehavior(){this.zoom=o().scaleExtent([.3,3]).on("zoom",(e=>{this.container_g.attr("transform",e.transform)})).on("start",(()=>{this.svg.style("cursor","grabbing")})).on("end",(()=>{this.svg.style("cursor","grab")})),this.svg.call(this.zoom)}createNavigationControls(){const o=e(this.container).append("div").attr("class","graph-controls").style("position","absolute").style("top","10px").style("right","10px").style("display","flex").style("flex-direction","column").style("gap","5px").style("z-index","1000");this.createControlButton(o,"+","Zoom In",(()=>{this.svg.transition().duration(300).call(this.zoom.scaleBy,1.5)})),this.createControlButton(o,"‚àí","Zoom Out",(()=>{this.svg.transition().duration(300).call(this.zoom.scaleBy,.67)})),this.createControlButton(o,"‚åÇ","Centralizar",(()=>{this.svg.transition().duration(500).call(this.zoom.transform,t.translate(0,0).scale(1))})),this.createNavigationHint()}createControlButton(o,t,a,i){o.append("button").attr("class","zoom-btn").style("width","40px").style("height","40px").style("border","none").style("border-radius","50%").style("background","#6366f1").style("color","white").style("font-size","‚åÇ"===t?"14px":"18px").style("font-weight","bold").style("cursor","pointer").style("box-shadow","0 2px 8px rgba(0,0,0,0.15)").style("transition","all 0.2s").text(t).attr("title",a).on("click",i).on("mouseover",(function(){e(this).style("background","#5855eb")})).on("mouseout",(function(){e(this).style("background","#6366f1")}))}createNavigationHint(){const o=e(this.container).append("div").style("position","absolute").style("bottom","10px").style("left","10px").style("background","rgba(0,0,0,0.7)").style("color","white").style("padding","8px 12px").style("border-radius","5px").style("font-size","12px").style("pointer-events","none").style("z-index","1000").html("üñ±Ô∏è Arrastar: mover ‚Ä¢ üîÑ Scroll: zoom ‚Ä¢ üéØ Clique: buscar");setTimeout((()=>{o.transition().duration(1e3).style("opacity",0).remove()}),5e3)}async prepareGraphData(e,o,t,a,i,r){console.log("üìä prepareGraphData iniciado");const s=e.slice(0,8);console.log("üìå Primeiro n√≠vel:",s.map((e=>e.word))),console.log("üîó Calculando segundo n√≠vel do grafo...");const n=new Map;for(const u of s.slice(0,2))try{if(console.log(`üîç Calculando segundo n√≠vel para: ${u.word}`),!a||"function"!=typeof a){console.error("‚ùå getEmbedding n√£o √© uma fun√ß√£o v√°lida:",typeof a);break}const e=await a(u.word);if(console.log(`‚úÖ Embedding obtido para ${u.word}:`,e?.length,"dimens√µes"),!r||"function"!=typeof r.getVocabulary){console.error("‚ùå semanticCategories n√£o √© v√°lido:",r);break}const t=r.getVocabulary();console.log("üìö Vocabul√°rio obtido:",t?.length,"palavras");const l=t.filter((e=>e.toLowerCase()!==u.word.toLowerCase()&&!s.some((o=>o.word.toLowerCase()===e.toLowerCase()))&&!o.includes(e.toLowerCase())));console.log(`üîé Palavras para comparar com ${u.word}:`,l.length);const d=[],c=15;console.log(`‚öôÔ∏è Processando embeddings em lotes de ${c}...`);for(let o=0;o<Math.min(l.length,60);o+=c){const e=l.slice(o,o+c);console.log(`   Lote ${Math.floor(o/c)+1}:`,e);const t=await Promise.all(e.map((e=>a(e))));d.push(...t),console.log(`   ‚úÖ Lote processado, total: ${d.length} embeddings`)}if(!i||"function"!=typeof i){console.error("‚ùå computeSimilarities n√£o √© uma fun√ß√£o v√°lida:",typeof i);break}console.log("üî¢ Calculando similaridades...");const g=await i(e,d);console.log("‚úÖ Similaridades calculadas:",g?.length);const h=l.slice(0,d.length).map(((e,o)=>({word:e,similarity:g[o],category:r.getCategoryForWord(e).name,parentWord:u.word}))).filter((e=>e.similarity>=.55)).sort(((e,o)=>o.similarity-e.similarity)).slice(0,3);console.log(`üìà Segundo n√≠vel para "${u.word}":`,h.map((e=>e.word))),h.forEach((e=>{n.has(e.word)||n.set(e.word,e)}))}catch(g){console.error(`‚ùå Erro ao calcular segundo n√≠vel para ${u.word}:`,g)}const l=Array.from(n.values());console.log(`‚úÖ Segundo n√≠vel calculado: ${l.length} n√≥s adicionais`);const d=[];d.push({id:t,similarity:1,category:"central",level:"central",size:28}),console.log(`‚ûï N√≥ central adicionado: ${t}`),s.forEach(((e,o)=>{d.push({id:e.word,similarity:e.similarity,category:e.category,level:"first",size:14+10*e.similarity,index:o})})),console.log(`‚ûï ${s.length} n√≥s do primeiro n√≠vel adicionados`),l.forEach(((e,o)=>{d.push({id:e.word,similarity:e.similarity,category:e.category,level:"second",size:8+5*e.similarity,parentWord:e.parentWord,index:o})})),console.log(`‚ûï ${l.length} n√≥s do segundo n√≠vel adicionados`),console.log("üìç Todos os n√≥s do grafo:",d.map((e=>`${e.id}(${e.level})`)));const c=[];return s.forEach((e=>{c.push({source:t,target:e.word,similarity:e.similarity,level:"first",strength:e.similarity})})),console.log(`üîó ${s.length} links do primeiro n√≠vel adicionados`),l.forEach((e=>{e.parentWord&&c.push({source:e.parentWord,target:e.word,similarity:e.similarity,level:"second",strength:.8*e.similarity})})),console.log("üîó Links do grafo:",c.length,"conex√µes"),console.log("‚úÖ prepareGraphData conclu√≠do"),{nodes:d,links:c}}renderLinks(e){this.container_g.append("g").selectAll("line").data(e).enter().append("line").attr("stroke",(e=>"first"===e.level?"#6366f1":"second"===e.level?"#94a3b8":"#999")).attr("stroke-opacity",(e=>"first"===e.level?.8:"second"===e.level?.6:.7)).attr("stroke-width",(e=>"first"===e.level?Math.sqrt(8*e.similarity):"second"===e.level?Math.sqrt(4*e.similarity):2))}renderNodes(e,o){const t=this.container_g.append("g").selectAll("circle").data(e).enter().append("circle").attr("r",(e=>e.size)).attr("fill",(e=>this.getNodeColor(e))).attr("stroke","#fff").attr("stroke-width",(e=>this.getStrokeWidth(e))).style("cursor","pointer");t.on("click",((e,t)=>{e.stopPropagation(),"central"!==t.level&&o&&o(t.id)})),t.on("mouseover",this.handleNodeHover.bind(this)),t.on("mouseout",this.handleNodeUnhover.bind(this))}renderLabels(e){this.container_g.append("g").selectAll("text").data(e).enter().append("text").text((e=>e.id)).attr("font-size",(e=>this.getFontSize(e))).attr("font-weight",(e=>this.getFontWeight(e))).attr("text-anchor","middle").attr("dy",".35em").attr("fill",(e=>"second"===e.level?"#64748b":"#1e293b")).style("pointer-events","none").style("text-shadow","1px 1px 2px rgba(255, 255, 255, 0.8)")}setupSimulation(e,o,t,l){this.simulation=a(e).force("link",i(o).id((e=>e.id)).distance((e=>"first"===e.level?130:"second"===e.level?90:110)).strength((e=>e.strength))).force("charge",r().strength((e=>"central"===e.level?-1e3:"first"===e.level?-450:"second"===e.level?-250:-350))).force("center",s(t/2,l/2)).force("collision",n().radius((e=>e.size+8))),this.simulation.on("tick",(()=>{this.updatePositions()}))}updatePositions(){this.container_g.selectAll("line").attr("x1",(e=>e.source.x)).attr("y1",(e=>e.source.y)).attr("x2",(e=>e.target.x)).attr("y2",(e=>e.target.y)),this.container_g.selectAll("circle").attr("cx",(e=>e.x)).attr("cy",(e=>e.y)),this.container_g.selectAll("text").attr("x",(e=>e.x)).attr("y",(e=>e.y))}getNodeColor(e){if("central"===e.level)return"#6366f1";const o=this.categoryColors[e.category]||"#374151";return"second"===e.level?o+"99":o}getStrokeWidth(e){return"central"===e.level?4:"first"===e.level?3:2}getFontSize(e){return"central"===e.level?"15px":"first"===e.level?"12px":"10px"}getFontWeight(e){return"central"===e.level?"bold":"first"===e.level?"600":"500"}handleNodeHover(o,t){e(o.target).transition().duration(200).attr("r",1.3*t.size).attr("stroke-width","central"===t.level?5:4),this.container_g.selectAll("line").transition().duration(200).attr("stroke-opacity",(e=>e.source.id===t.id||e.target.id===t.id?"first"===e.level?1:.9:"first"===e.level?.2:.1))}handleNodeUnhover(o,t){e(o.target).transition().duration(200).attr("r",t.size).attr("stroke-width",this.getStrokeWidth(t)),this.container_g.selectAll("line").transition().duration(200).attr("stroke-opacity",(e=>"first"===e.level?.8:.6))}clearGraph(){this.container.innerHTML="",this.simulation&&(this.simulation.stop(),this.simulation=null),this.svg=null,this.container_g=null,this.zoom=null}renderResultsList(e,o,t){o.innerHTML="",e.forEach(((e,a)=>{const i=document.createElement("div");i.className="word-item",i.style.animationDelay=.05*a+"s";const r=Math.round(100*e.similarity),s=this.categoryColors[e.category]||"#374151";i.innerHTML=`\n                <div class="word-text">\n                    ${e.word}\n                    <span class="category-badge" style="background-color: ${s}">${e.category}</span>\n                </div>\n                <div class="similarity-score">${r}% similar</div>\n                <div class="similarity-bar">\n                    <div class="similarity-fill" style="width: ${r}%"></div>\n                </div>\n            `,i.addEventListener("click",(()=>{t&&t(e.word)})),o.appendChild(i)}))}dispose(){this.clearGraph(),console.log("üé® Visualization Engine finalizado")}}export{l as S,c as V,d as W};
//# sourceMappingURL=core-8d0Ef0yU.js.map
